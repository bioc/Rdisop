* Checking for deprecated package usage... OK
* Checking for remote package usage... OK
* Checking for 'LazyData: true' usage... OK
* Checking version number... OK
* Checking version number validity... OK
* Checking R version dependency...
* NOTE: Update R version dependency from 2.0.0 to 4.4.0.
* Checking package size... OK
* Checking individual file sizes... OK
* Checking biocViews... OK
* Checking that biocViews are present... OK
* Checking package type based on biocViews... OK
* Checking for non-trivial biocViews... OK
* Checking that biocViews come from the same category... OK
* Checking biocViews validity... OK
* Checking for recommended biocViews... OK
* Checking build system compatibility... OK
* Checking for blank lines in DESCRIPTION... OK
* Checking if DESCRIPTION is well formatted... OK
* Checking for proper Description: field... OK
* Checking for whitespace in DESCRIPTION field names... OK
* Checking that Package field matches directory/tarball name... OK
* Checking for Version: field... OK
* Checking for valid maintainer... OK
* Checking License: for restrictive use... OK
* Checking for recommended DESCRIPTION fields... OK
* Checking for Bioconductor software dependencies...
* WARNING: No Bioconductor dependencies detected. Note that some
            infrastructure packages may not have Bioconductor dependencies.
            For more information, reach out to the Bioconductor community
            and/or consider a CRAN submission.
* Checking for pinned package versions in DESCRIPTION... OK
* Checking .Rbuildignore... OK
* Checking for stray BiocCheck output folders... OK
* Checking for inst/doc folders... OK
* Checking vignette directory...
* NOTE: Potential intermediate files found:
vignettes/rdisop.html
* NOTE:  'sessionInfo' not found in vignette(s)
Missing from file(s):
vignettes/Rdisop.Rmd
* Checking package installation calls in R code... OK
* Checking for library/require of Rdisop... OK
* Checking coding practice...
* NOTE:  Avoid sapply(); use vapply()
Found in files:
R/addMolecules.R (line 37, column 20)
R/addMolecules.R (line 40, column 30)
R/addMolecules.R (line 70, column 20)
R/addMolecules.R (line 73, column 30)
R/decomposeIsotopes.R (line 61, column 20)
R/decomposeIsotopes.R (line 64, column 30)
R/getMolecule.R (line 40, column 20)
R/getMolecule.R (line 41, column 30)
R/initializeElements.R (line 47, column 23)
* WARNING:  Avoid T/F variables; If logical, use TRUE/FALSE 
Found 2 times:
F in R/initializeElements.R (line 104, column 5)
F in R/initializeElements.R (line 179, column 127)
* Checking parsed R code in R directory, examples, vignettes... OK
* Checking function lengths...
* NOTE: The recommended function length is 50 lines or less. There is 1 function greater than 50 lines.
The longest 5 functions are:
initializePSE() (R/initializeElements.R): 109 lines
* Checking man page documentation... OK
* Checking package NEWS...
* NOTE: Consider adding a NEWS file, so your package news will be included in Bioconductor release announcements.
* Checking unit tests... OK
* Checking skip_on_bioc() in tests... OK
* Checking formatting of DESCRIPTION, NAMESPACE, man pages, R source, and vignette source...
* NOTE: Consider shorter lines; 142 lines (19%) are > 80 characters long.
First few lines:
R/addMolecules.R#L9 #' @param elements list of allowed chemi ...
R/addMolecules.R#L10 #' @param maxisotopes maximum number of  ...
R/addMolecules.R#L36   # Remember ordering of element names,  ...
R/addMolecules.R#L69   # Remember ordering of element names,  ...
R/decomposeIsotopes.R#L10 #' @param intensities Absolute or relati ...
R/decomposeIsotopes.R#L15 #' @param z Charge z of m/z peaks for ca ...
R/decomposeIsotopes.R#L16 #' @param maxisotopes Maximum number of  ...
R/decomposeIsotopes.R#L17 #' @param minElements Molecular formulas ...
R/decomposeIsotopes.R#L18 #' @param maxElements Molecular formulas ...
R/decomposeIsotopes.R#L20 #' @details Sum formulas are calculated  ...
R/decomposeIsotopes.R#L22 #' @return A list of molecules, which co ...
R/decomposeIsotopes.R#L60   # Remember ordering of element names,  ...
R/decomposeIsotopes.R#L86   decomposeIsotopes(masses = c(mass), in ...
R/decomposeIsotopes.R#L93 #' @param molecule An initialized molecu ...
R/decomposeIsotopes.R#L126   .Call("calculateScore", predictedMass, ...
R/getMolecule.R#L2 #' @title Calculate mass and isotope inf ...
R/getMolecule.R#L9 #' @param elements list of allowed chemi ...
R/getMolecule.R#L11 #' @param maxisotopes maximum number of  ...
R/getMolecule.R#L17 #' @return A list with the elements `for ...
R/getMolecule.R#L18 #'     monoisotopic mass of molecule, `s ...
R/getMolecule.R#L54 #' @param molecule An initialized molecu ...
R/initializeElements.R#L2 #' @title Initialize (a subset of) eleme ...
R/initializeElements.R#L11 #'     reduce the number of decompositio ...
R/initializeElements.R#L20 #'     mass of molecule, `isotope` a lis ...
R/initializeElements.R#L74     D <- list(name="D", mass=2,  isotope ...
R/initializeElements.R#L75     Ac <- list(name= 'Ac', mass=227, iso ...
R/initializeElements.R#L76     Ag <- list(name= 'Ag', mass=107, iso ...
R/initializeElements.R#L77     Al <- list(name= 'Al', mass=27, isot ...
R/initializeElements.R#L78     Am <- list(name= 'Am', mass=243, iso ...
R/initializeElements.R#L79     Ar <- list(name= 'Ar', mass=36, isot ...
R/initializeElements.R#L80     As <- list(name= 'As', mass=75, isot ...
R/initializeElements.R#L81     At <- list(name= 'At', mass=210, iso ...
R/initializeElements.R#L82     Au <- list(name= 'Au', mass=197, iso ...
R/initializeElements.R#L83     B <- list(name= 'B', mass=10, isotop ...
R/initializeElements.R#L84     Ba <- list(name= 'Ba', mass=130, iso ...
R/initializeElements.R#L85     Be <- list(name= 'Be', mass=9, isoto ...
R/initializeElements.R#L86     Bi <- list(name= 'Bi', mass=209, iso ...
R/initializeElements.R#L87     Bk <- list(name= 'Bk', mass=247, iso ...
R/initializeElements.R#L88     Br <- list(name= 'Br', mass=79, isot ...
R/initializeElements.R#L89     C <- list(name= 'C', mass=12, isotop ...
R/initializeElements.R#L90     Ca <- list(name= 'Ca', mass=40, isot ...
R/initializeElements.R#L91     Cd <- list(name= 'Cd', mass=106, iso ...
R/initializeElements.R#L92     Ce <- list(name= 'Ce', mass=136, iso ...
R/initializeElements.R#L94     Cl <- list(name= 'Cl', mass=35, isot ...
R/initializeElements.R#L96     Co <- list(name= 'Co', mass=59, isot ...
R/initializeElements.R#L97     Cr <- list(name= 'Cr', mass=50, isot ...
R/initializeElements.R#L98     Cs <- list(name= 'Cs', mass=133, iso ...
R/initializeElements.R#L99     Cu <- list(name= 'Cu', mass=63, isot ...
R/initializeElements.R#L100     Dy <- list(name= 'Dy', mass=156, iso ...
R/initializeElements.R#L101     Er <- list(name= 'Er', mass=162, iso ...
R/initializeElements.R#L103     Eu <- list(name= 'Eu', mass=151, iso ...
R/initializeElements.R#L104     F <- list(name= 'F', mass=19, isotop ...
R/initializeElements.R#L105     Fe <- list(name= 'Fe', mass=54, isot ...
R/initializeElements.R#L107     Fr <- list(name= 'Fr', mass=223, iso ...
R/initializeElements.R#L108     Ga <- list(name= 'Ga', mass=69, isot ...
R/initializeElements.R#L109     Gd <- list(name= 'Gd', mass=152, iso ...
R/initializeElements.R#L110     Ge <- list(name= 'Ge', mass=70, isot ...
R/initializeElements.R#L111     H <- list(name= 'H', mass=1, isotope ...
R/initializeElements.R#L112     He <- list(name= 'He', mass=3, isoto ...
R/initializeElements.R#L113     Hf <- list(name= 'Hf', mass=174, iso ...
R/initializeElements.R#L114     Hg <- list(name= 'Hg', mass=196, iso ...
R/initializeElements.R#L115     Ho <- list(name= 'Ho', mass=165, iso ...
R/initializeElements.R#L116     I <- list(name= 'I', mass=127, isoto ...
R/initializeElements.R#L117     In <- list(name= 'In', mass=113, iso ...
R/initializeElements.R#L118     Ir <- list(name= 'Ir', mass=191, iso ...
R/initializeElements.R#L119     K <- list(name= 'K', mass=39, isotop ...
R/initializeElements.R#L120     Kr <- list(name= 'Kr', mass=78, isot ...
R/initializeElements.R#L121     La <- list(name= 'La', mass=138, iso ...
R/initializeElements.R#L122     Li <- list(name= 'Li', mass=6, isoto ...
R/initializeElements.R#L124     Lu <- list(name= 'Lu', mass=175, iso ...
R/initializeElements.R#L126     Mg <- list(name= 'Mg', mass=24, isot ...
R/initializeElements.R#L127     Mn <- list(name= 'Mn', mass=55, isot ...
R/initializeElements.R#L128     Mo <- list(name= 'Mo', mass=92, isot ...
R/initializeElements.R#L129     N <- list(name= 'N', mass=14, isotop ...
R/initializeElements.R#L130     Na <- list(name= 'Na', mass=23, isot ...
R/initializeElements.R#L131     Nb <- list(name= 'Nb', mass=93, isot ...
R/initializeElements.R#L132     Nd <- list(name= 'Nd', mass=142, iso ...
R/initializeElements.R#L133     Ne <- list(name= 'Ne', mass=20, isot ...
R/initializeElements.R#L134     Ni <- list(name= 'Ni', mass=58, isot ...
R/initializeElements.R#L136     Np <- list(name= 'Np', mass=237, iso ...
R/initializeElements.R#L137     O <- list(name= 'O', mass=16, isotop ...
R/initializeElements.R#L138     Os <- list(name= 'Os', mass=184, iso ...
R/initializeElements.R#L139     P <- list(name= 'P', mass=31, isotop ...
R/initializeElements.R#L140     Pa <- list(name= 'Pa', mass=231, iso ...
R/initializeElements.R#L141     Pb <- list(name= 'Pb', mass=204, iso ...
R/initializeElements.R#L142     Pd <- list(name= 'Pd', mass=102, iso ...
R/initializeElements.R#L143     Pm <- list(name= 'Pm', mass=145, iso ...
R/initializeElements.R#L144     Po <- list(name= 'Po', mass=209, iso ...
R/initializeElements.R#L145     Pr <- list(name= 'Pr', mass=141, iso ...
R/initializeElements.R#L146     Pt <- list(name= 'Pt', mass=190, iso ...
R/initializeElements.R#L148     Ra <- list(name= 'Ra', mass=226, iso ...
R/initializeElements.R#L149     Rb <- list(name= 'Rb', mass=85, isot ...
R/initializeElements.R#L150     Re <- list(name= 'Re', mass=185, iso ...
R/initializeElements.R#L151     Rh <- list(name= 'Rh', mass=103, iso ...
R/initializeElements.R#L152     Rn <- list(name= 'Rn', mass=222, iso ...
R/initializeElements.R#L153     Ru <- list(name= 'Ru', mass=96, isot ...
R/initializeElements.R#L154     S <- list(name= 'S', mass=32, isotop ...
R/initializeElements.R#L155     Sb <- list(name= 'Sb', mass=121, iso ...
R/initializeElements.R#L156     Sc <- list(name= 'Sc', mass=45, isot ...
R/initializeElements.R#L157     Se <- list(name= 'Se', mass=74, isot ...
R/initializeElements.R#L158     Si <- list(name= 'Si', mass=28, isot ...
R/initializeElements.R#L159     Sm <- list(name= 'Sm', mass=144, iso ...
R/initializeElements.R#L160     Sn <- list(name= 'Sn', mass=112, iso ...
R/initializeElements.R#L161     Sr <- list(name= 'Sr', mass=84, isot ...
R/initializeElements.R#L162     Ta <- list(name= 'Ta', mass=180, iso ...
R/initializeElements.R#L163     Tb <- list(name= 'Tb', mass=159, iso ...
R/initializeElements.R#L164     Tc <- list(name= 'Tc', mass=98, isot ...
R/initializeElements.R#L165     Te <- list(name= 'Te', mass=120, iso ...
R/initializeElements.R#L166     Th <- list(name= 'Th', mass=232, iso ...
R/initializeElements.R#L167     Ti <- list(name= 'Ti', mass=46, isot ...
R/initializeElements.R#L168     Tl <- list(name= 'Tl', mass=203, iso ...
R/initializeElements.R#L169     Tm <- list(name= 'Tm', mass=169, iso ...
R/initializeElements.R#L170     U <- list(name= 'U', mass=234, isoto ...
R/initializeElements.R#L171     V <- list(name= 'V', mass=50, isotop ...
R/initializeElements.R#L172     W <- list(name= 'W', mass=180, isoto ...
R/initializeElements.R#L173     Xe <- list(name= 'Xe', mass=124, iso ...
R/initializeElements.R#L174     Y <- list(name= 'Y', mass=89, isotop ...
R/initializeElements.R#L175     Yb <- list(name= 'Yb', mass=168, iso ...
R/initializeElements.R#L176     Zn <- list(name= 'Zn', mass=64, isot ...
R/initializeElements.R#L177     Zr <- list(name= 'Zr', mass=90, isot ...
R/initializeElements.R#L179     list(D, Ac, Ag, Al, Am, Ar, As, At,  ...
R/initializeElements.R#L185     positive <- list(name="+", mass=0, i ...
R/initializeElements.R#L186     negative <- list(name="-", mass=0, i ...
vignettes/Rdisop.Rmd#L4   - Steffen Neumann$^\dagger$, Anton Per ...
vignettes/Rdisop.Rmd#L6   - $^\ddagger$Friedrich-Schiller-Univer ...
vignettes/Rdisop.Rmd#L7   # - Steffen Neumann^[Leibniz Institute ...
vignettes/Rdisop.Rmd#L8   # - Anton Pervukhin^[Bioinformatics, F ...
vignettes/Rdisop.Rmd#L9   # - Sebastian Böcker^[Bioinformatics,  ...
vignettes/Rdisop.Rmd#L46 corresponds to the masses of the sample  ...
vignettes/Rdisop.Rmd#L51 therefore does not suffice to identify a ...
vignettes/Rdisop.Rmd#L59 (the atomic number) is fixed and defines ...
vignettes/Rdisop.Rmd#L60 neutrons, on the other hand, can vary: A ...
vignettes/Rdisop.Rmd#L71 identical nominal mass. Instead, these i ...
vignettes/Rdisop.Rmd#L73 identical nominal mass and refer to the  ...
vignettes/Rdisop.Rmd#L96 (sum-)formula, its isotope pattern, a sc ...
vignettes/Rdisop.Rmd#L113 Note that the formula is in a canonical  ...
vignettes/Rdisop.Rmd#L119 larger set of elements yields a (much) l ...
vignettes/Rdisop.Rmd#L133 ```{r fig1, fig.cap="Isotope pattern for ...
vignettes/Rdisop.Rmd#L148 case). The larger the masses, the allowe ...
vignettes/Rdisop.Rmd#L150 formula and weight and score. The parity ...
vignettes/Rdisop.Rmd#L160 molecule, and the masses and intensities ...
vignettes/Rdisop.Rmd#L178 If the masses were obtained by an LC-ESI ...
* NOTE: Consider 4 spaces instead of tabs; 8 lines (1%) contain tabs.
First few lines:
R/decomposeIsotopes.R#L113   # 	molecule <- getMolecule(formula) ...
R/decomposeIsotopes.R#L114   # 	massintensities<-matrix(NA,ncol=len ...
R/decomposeIsotopes.R#L115   # 	for(i in 1:length(masses)) ...
R/decomposeIsotopes.R#L117     # 		massintensities[1,i]<-masses[i]; ...
R/decomposeIsotopes.R#L118     # 		massintensities[2,i]<-intensitie ...
R/decomposeIsotopes.R#L120   # 	molecule$isotopes <- list(massinten ...
R/initializeElements.R#L73 	 ...
R/initializeElements.R#L178 	 ...
* NOTE: Consider multiples of 4 spaces for line indents; 128 lines (17%) are not.
First few lines:
R/addMolecules.R#L24   formula1, formula2, elements = NULL, m ...
R/addMolecules.R#L26   # First argument may be vector of form ...
R/addMolecules.R#L27   if (length(formula2) > 1) { ...
R/addMolecules.R#L29   } ...
R/addMolecules.R#L30    ...
R/addMolecules.R#L31   # Use full PSE unless stated otherwise ...
R/addMolecules.R#L32   if (!is.list(elements) || length(eleme ...
R/addMolecules.R#L34   } ...
R/addMolecules.R#L35    ...
R/addMolecules.R#L36   # Remember ordering of element names,  ...
R/addMolecules.R#L37   element_order <- sapply(elements, func ...
R/addMolecules.R#L39   }) ...
R/addMolecules.R#L40   elements <- elements[order(sapply(elem ...
R/addMolecules.R#L42   }))] ...
R/addMolecules.R#L43    ...
R/addMolecules.R#L44   # Call imslib to parse formula and cal ...
R/addMolecules.R#L45   # masses and isotope pattern ...
R/addMolecules.R#L46   .Call("addMolecules", ...
R/addMolecules.R#L51   ) ...
R/addMolecules.R#L57   formula1, formula2, elements = NULL, m ...
R/addMolecules.R#L59   # First argument may be vector of form ...
R/addMolecules.R#L60   if (length(formula2) > 1) { ...
R/addMolecules.R#L62   } ...
R/addMolecules.R#L63    ...
R/addMolecules.R#L64   # Use full PSE unless stated otherwise ...
R/addMolecules.R#L65   if (!is.list(elements) || length(eleme ...
R/addMolecules.R#L67   } ...
R/addMolecules.R#L68    ...
R/addMolecules.R#L69   # Remember ordering of element names,  ...
R/addMolecules.R#L70   element_order <- sapply(elements, func ...
R/addMolecules.R#L72   }) ...
R/addMolecules.R#L73   elements <- elements[order(sapply(elem ...
R/addMolecules.R#L75   }))] ...
R/addMolecules.R#L76    ...
R/addMolecules.R#L77   # Call imslib to parse formula and cal ...
R/addMolecules.R#L78   .Call("subMolecules", ...
R/addMolecules.R#L83   ) ...
R/decomposeIsotopes.R#L38   masses, intensities, ppm = 2.0, mzabs  ...
R/decomposeIsotopes.R#L39   filter = NULL, z = 0, maxisotopes = 10 ...
R/decomposeIsotopes.R#L40   minElements = "C0", maxElements = "C99 ...
R/decomposeIsotopes.R#L42    ...
R/decomposeIsotopes.R#L43   # Use limited limited CHNOPS unless st ...
R/decomposeIsotopes.R#L44   if (!is.list(elements) || length(eleme ...
R/decomposeIsotopes.R#L46   } ...
R/decomposeIsotopes.R#L48   # If only a single mass is given, inte ...
R/decomposeIsotopes.R#L49   if (length(masses) == 1) { ...
R/decomposeIsotopes.R#L51   } ...
R/decomposeIsotopes.R#L53   if (length(masses) != length(intensiti ...
R/decomposeIsotopes.R#L55   } ...
R/decomposeIsotopes.R#L57   # Calculate (average) mass difference, ...
R/decomposeIsotopes.R#L58   charge <- 1 ...
R/decomposeIsotopes.R#L60   # Remember ordering of element names,  ...
R/decomposeIsotopes.R#L61   element_order <- sapply(elements, func ...
R/decomposeIsotopes.R#L63   }) ...
R/decomposeIsotopes.R#L64   elements <- elements[order(sapply(elem ...
R/decomposeIsotopes.R#L66   }))] ...
R/decomposeIsotopes.R#L68   # Calculate relative Error based on ma ...
R/decomposeIsotopes.R#L69   ppm <- ppm + mzabs / masses[1] * 10000 ...
R/decomposeIsotopes.R#L70    ...
R/decomposeIsotopes.R#L71   # Finally ready to make the call... ...
R/decomposeIsotopes.R#L72   .Call("decomposeIsotopes", ...
R/decomposeIsotopes.R#L75   ) ...
R/decomposeIsotopes.R#L82   mass, ppm = 2.0, mzabs = 0.0001, eleme ...
R/decomposeIsotopes.R#L83   maxisotopes = 10, minElements = "C0",  ...
R/decomposeIsotopes.R#L85   # call the simplified version of decom ...
R/decomposeIsotopes.R#L86   decomposeIsotopes(masses = c(mass), in ...
R/decomposeIsotopes.R#L89   ) ...
R/decomposeIsotopes.R#L96   molecule, masses, intensities, element ...
R/decomposeIsotopes.R#L98   # Obtain the similarity score between  ...
R/decomposeIsotopes.R#L99   # Use limited limited CHNOPS unless st ...
R/decomposeIsotopes.R#L100   if (!is.list(elements) || length(eleme ...
R/decomposeIsotopes.R#L102   } ...
R/decomposeIsotopes.R#L103    ...
R/decomposeIsotopes.R#L104   # If only a single mass is given, inte ...
R/decomposeIsotopes.R#L105   if (length(masses) == 1) { ...
R/decomposeIsotopes.R#L107   } ...
R/decomposeIsotopes.R#L108    ...
R/decomposeIsotopes.R#L109   if (length(masses) != length(intensiti ...
R/decomposeIsotopes.R#L111   } ...
R/decomposeIsotopes.R#L112    ...
R/decomposeIsotopes.R#L113   # 	molecule <- getMolecule(formula) ...
R/decomposeIsotopes.R#L114   # 	massintensities<-matrix(NA,ncol=len ...
R/decomposeIsotopes.R#L115   # 	for(i in 1:length(masses)) ...
R/decomposeIsotopes.R#L116   { ...
R/decomposeIsotopes.R#L119   } ...
R/decomposeIsotopes.R#L120   # 	molecule$isotopes <- list(massinten ...
R/decomposeIsotopes.R#L121   #         scoreMolecule(molecule,eleme ...
R/decomposeIsotopes.R#L122   predictedMass <- molecule$isotopes[[1] ...
R/decomposeIsotopes.R#L123   predictedAbundances <- molecule$isotop ...
R/decomposeIsotopes.R#L124    ...
R/decomposeIsotopes.R#L125   # call the score function ...
R/decomposeIsotopes.R#L126   .Call("calculateScore", predictedMass, ...
R/decomposeIsotopes.R#L127    ...
R/getMolecule.R#L32   # Use full PSE unless stated otherwise ...
R/getMolecule.R#L33   if (!is.list(elements) || length(eleme ...
R/getMolecule.R#L35   } ...
R/getMolecule.R#L36    ...
R/getMolecule.R#L37   # Remember ordering of element names, ...
R/getMolecule.R#L38   # but ensure list of elements is order ...
R/getMolecule.R#L39   # by mass ...
R/getMolecule.R#L40   element_order <- sapply(elements, func ...
R/getMolecule.R#L41   elements <- elements[order(sapply(elem ...
R/getMolecule.R#L42    ...
R/getMolecule.R#L43   # Call imslib to parse formula and cal ...
R/getMolecule.R#L44   # masses and isotope pattern ...
R/getMolecule.R#L45   molecule <- .Call("getMolecule", ...
R/getMolecule.R#L49    ...
R/getMolecule.R#L50   molecule ...
R/getMolecule.R#L59   molecule$exactmass ...
R/getMolecule.R#L65   molecule$isotope[[1]][,index] ...
R/getMolecule.R#L71   if (is.null(molecule$formula)) { ...
R/getMolecule.R#L73   } else { ...
R/getMolecule.R#L75   } ...
R/getMolecule.R#L81   if (is.null(molecule$score)) { ...
R/getMolecule.R#L83   } else { ...
R/getMolecule.R#L85   } ...
R/getMolecule.R#L91   if (is.null(molecule$valid)) { ...
R/getMolecule.R#L93   } else { ...
R/getMolecule.R#L95   } ...
R/initializeElements.R#L42   if (!is.list(elements) || length(eleme ...
R/initializeElements.R#L44   } ...
R/initializeElements.R#L45   rex <- paste("^", name, "$", sep = "") ...
R/initializeElements.R#L46    ...
R/initializeElements.R#L47   elements[[grep(rex, sapply(elements, f ...
R/initializeElements.R#L49   }))]] ...
R/initializeElements.R#L55   initializeElements(c("C", "H", "N", "O ...
vignettes/Rdisop.Rmd#L24   collapse = TRUE, ...
vignettes/Rdisop.Rmd#L25   comment = "#>" ...
* Checking if package already exists in CRAN... OK
* Checking for bioc-devel mailing list subscription...
* NOTE: Cannot determine whether maintainer is subscribed to the Bioc-Devel mailing list (requires admin credentials). Subscribe here: https://stat.ethz.ch/mailman/listinfo/bioc-devel
* Checking for support site registration...
* ERROR: Add package to Watched Tags in your Support Site profile; visit https://support.bioconductor.org/accounts/edit/profile
